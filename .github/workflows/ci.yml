name: ci

on:
  pull_request:
    paths-ignore: ["**/*.md", "docs/**"]
    branches: ["main", "dev"]
  push:
    paths-ignore: ["**/*.md", "docs/**"]
    branches: ["main", "dev"]

env:
  # https://go.dev/doc/devel/release
  GO_VERSION: "1.20.5"
  # https://github.com/golangci/golangci-lint/releases
  GOLANGCI_LINT_VERSION: "v1.52.2"

jobs:
  tidy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v4
        with:
          go-version: "${{ env.GO_VERSION }}"
      - run: go mod tidy
      - name: Check for dirty files
        run: git diff --exit-code

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v4
        with:
          go-version: "${{ env.GO_VERSION }}"
      - uses: golangci/golangci-lint-action@v3
        with:
          version: "${{ env.GOLANGCI_LINT_VERSION }}"
          # tar errors extracting to pkg dir
          # example: https://github.com/knative-sandbox/kn-plugin-func/pull/490/checks?check_run_id=3551662472
          # issue:   https://github.com/golangci/golangci-lint-action/issues/244
          # hotfix is to skip the pkg cache, which also requires an extended timeout:
          skip-pkg-cache: true

  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v4
        with:
          go-version: "${{ env.GO_VERSION }}"
      - run: make build

  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v4
        with:
          go-version: "${{ env.GO_VERSION }}"
      - run: make test

  deploy:
    needs: [tidy, lint, build, test]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Log in to Docker Hub
        run: docker login -u ${{ secrets.DOCKER_HUB_USERNAME }} -p ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      - name: Build and push Docker image
        run: |
          export REF_NAME=$(echo $GITHUB_REF | awk -F / '{print $NF}')
          export SHA_SHORT=$(echo $GITHUB_SHA | cut -c1-7)
          export TIMESTAMP=$(date -u +"%Y-%m-%dT%H:%M:%SZ")

          docker buildx build \
            --platform linux/amd64 \
            --build-arg "BUILD_VERSION=$REF_NAME" \
            --build-arg "BUILD_HASH=$SHA_SHORT" \
            --build-arg "BUILD_TIME=$TIMESTAMP" \
            -t "docker.io/brisouamaury/gateway-test-service:latest" \
            -t "docker.io/brisouamaury/gateway-test-service:$SHA_SHORT" \
            --push \
            .
